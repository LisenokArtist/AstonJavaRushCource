version: "3.9"

services:
  cloud-config-service:
    build:
      context: cloud-config-service/
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - general
  
  discovery-server-service:
    build:
      context: discovery-server-service/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - general

  gateway-service:
    build:
      context: gateway-service/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://discovery-server-service:8761/eureka
    depends_on:
      - discovery-server-service
    networks:
      - general

  user-notification-service:
    build:
      context: user-notification-service/
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    expose:
      - "8083"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      POSTGRES_HOST: db
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/postgres"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - kafka
      - db

  user-service:
    build:
      context: user-service/
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    expose:
      - "8082"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      POSTGRES_HOST: db
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/postgres"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - kafka
      - db
    networks:
      - general
  
  kafka:
    image: apache/kafka:3.7.0
    ports:
      - "9092:9092"
      - "9093:9093"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:9092'
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_CREATE_TOPICS: 'user-events:3:1'
    networks:
      - general
      
  db:
    image: 'postgres:13' # Use a specific PostgreSQL image version
    environment:
      POSTGRES_DB: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '0'
    ports:
      - '5432:5432' # Map host port 5432 to container port 5432
    volumes:
      - 'postgres_data:/var/lib/postgresql/data' # Persist data
    networks:
      - general

volumes:
  kafka_data:
    driver: local
  postgres_data:

networks:
  general:
    driver: bridge