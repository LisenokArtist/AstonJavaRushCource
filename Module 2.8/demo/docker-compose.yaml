version: "3.9"

services:
  cloud-config-service:
    build:
      context: cloud-config-service/
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://discovery-server-service:8761/eureka
    networks:
      - general
  
  discovery-server-service:
    build:
      context: discovery-server-service/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - general

  gateway-service:
    build:
      context: gateway-service/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICE_URL: http://discovery-server-service:8761/eureka
    depends_on:
      - discovery-server-service
    networks:
      - general

  user-notification-service:
    build:
      context: user-notification-service/
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    expose:
      - "8083"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka
      POSTGRES_HOST: postgres
      EUREKA_CLIENT_SERVICE_URL: http://discovery-server-service:8761/eureka
    depends_on:
      - kafka
      - postgres
      - discovery-server-service
    networks:
      - general

  user-service:
    build:
      context: user-service/
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    expose:
      - "8082"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka
      POSTGRES_HOST: postgres
      EUREKA_CLIENT_SERVICE_URL: http://discovery-server-service:8761/eureka
    depends_on:
      - kafka
      - postgres
      - discovery-server-service
    networks:
      - general
  
  kafka:
    image: apache/kafka:3.7.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_CREATE_TOPICS: 'user-events:3:1'
    networks:
      - general
      
  postgres:
    image: 'postgres:13'
    restart: always
    container_name: postgres-db
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "0"
      POSTGRES_EXTRA_OPTS: "listen_addresses = '*'"
    ports:
      - "5433:5432"
    expose:
      - "5432"
      - "5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - general

volumes:
  kafka_data:
    driver: local
  postgres_data:

networks:
  general:
    driver: bridge