spring.application.name=user-service
server.port=8082

# postgresql.properties
    spring.datasource.driverClassName=org.postgresql.Driver
    spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
    spring.datasource.username=postgres
    spring.datasource.password=0
    spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.generate-ddl=true
    spring.h2.console.enabled=true

# kafka.properties
    spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost}:9092
    spring.kafka.user.topic=user-events
    spring.kafka.user.group=user-event-consumer-group
    spring.kafka.user.listencontainer=userListenerContainerFactory
    auto.create.topics.enable=true

# circuitbreaker
    resilience4j.circuitbreaker.instances.countCircuitBreaker.registerHealthIndicator=true
    resilience4j.circuitbreaker.instances.countCircuitBreaker.slidingWindowSize=10
    resilience4j.circuitbreaker.instances.countCircuitBreaker.failureRateThreshold=50
    resilience4j.circuitbreaker.instances.countCircuitBreaker.waitDurationInOpenState=5s
    resilience4j.circuitbreaker.instances.countCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
    
# eureka
    eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka}